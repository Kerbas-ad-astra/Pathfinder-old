PART
{
name = WBI_Ponderosa
module = Part
author = Angel-125

MODEL
{
	model = WildBlueIndustries/Pathfinder/Assets/Ponderosa
}
rescaleFactor = 1
node_attach = 0, 0, 0, 0, -1, 0, 1
node_stack_bottom = 0, 0, 0, 0, -1, 0, 1
node_stack_front = 0, 0.506, -4.272, 0, 0, -1, 0
node_stack_left = -1.928, 0.506, -2.344, -1, 0, 0, 0
node_stack_right = 1.928, 0.506, -2.344, 1, 0, 0, 0


TechRequired = spaceExploration
entryCost = 18000
cost = 8000
category = Utility
subcategory = 0
title = Ponderosa Inflatable Module
manufacturer = Wild Blue Industries
description = First in Wild Blue Industries' new line of containerized inflatable modules, the Ponderosa can be configured for a wide variety of different purposes. Just add rocket parts.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,1,1,1

// --- standard part parameters ---
mass = 0.1
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 15
maxTemp = 2000
breakingForce = 50
breakingTorque = 50
bulkheadProfiles = size1, srf
vesselType = Base
CrewCapacity = 4

INTERNAL
{
    name = crewCabinInternals
}

MODULE
{
    name = ModuleKISItemEvaTweaker
    editorItemsCategory = false
    carriable = true
    equipMode = part
    equipSlot = jetpack
    equipMeshName = jetpack_base01
    equipBoneName = bn_jetpack01
    equipPos = (0,-0.2,-0.45)
    equipDir = (0,0,0)
    runSpeed = 0.8
}

MODULE
{
    name = WBILight
    animationName = PonderosaLights
    startEventGUIName = Lights On
    endEventGUIName = Lights Off
    ecRequired = 0.04
}

MODULE
{
    name = ModuleCommand
    minimumCrew = 0
}

MODULE
{
    name = WBIPonderosaModule
    enableLogging = True

    //Determines whether or not to show the context menu GUI
    //So objects derived from MKSStorageContainer can show their own GUI
    showGUI = True

    //Determines whether or not the part is inflatable
    isInflatable = True

    //Name of inflatable animation
    animationName = Deploy

    //GUI name of deploy animation
    startEventGUIName = Inflate

    //GUI name of retract animation
    endEventGUIName = Deflate

    //Some containers don't hold as much resources as the template specifies, while others hold more.
    //Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
    //factor into the resource amounts.
    capacityFactor = 1.0

    //Crew capacity when inflated
    inflatedCrewCapacity = 4

    //Determines if the part can be reconfigured out in the field.
    fieldReconfigurable = true

    //name of the template nodes to use
    templateNodes = PATHFINDER

    //Don't let the WBIModuleSwitcher add resource converters. We'll do that ourselves.
    ignoreTemplateModules = ModuleResourceConverter

    //Short name of the default module template.
    //This is used when selecting the part in the editor.
    //User will then right-click on the module to change its type.
    defaultTemplate = Pathfinder

    //Name of the logo panel transforms
    logoPanelTransform = logoPanel001, logoPanel002, logoPanel003, logoPanel004
    decalsVisible = true

    //If the part has a KIS container, this is the base and max amount
    baseStorage = 8000
    maxStorage = 2000
}

MODULE
{
    name = FlagDecal
    textureQuadName = flagTransform
}

MODULE
{
    name = ModuleKISInventory
    maxVolume = 8000
    externalAccess = true
    internalAccess = true
    slotsX = 10
    slotsY = 8
    slotSize = 50
    itemIconResolution = 128
    selfIconResolution = 128
    openSndPath = KIS/Sounds/containerOpen
    closeSndPath = KIS/Sounds/containerClose
    defaultMoveSndPath = KIS/Sounds/itemMove
}

MODULE
{
    name = ModuleKISPartMount
    mountedPartNode = mount
    sndStorePath = KIS/Sounds/containerMount
    allowRelease = true

    MOUNT
    {
        attachNode = front
        allowedPartName= WBI_Chuckwagon
        allowedPartName= WBI_Mineshaft
    }

    MOUNT
    {
        attachNode = left
        allowedPartName= WBI_Chuckwagon
        allowedPartName= WBI_Mineshaft
    }

    MOUNT
    {
        attachNode = right
        allowedPartName= WBI_Chuckwagon
        allowedPartName= WBI_Mineshaft
    }
}

MODULE
{
    name = ModuleScienceContainer
    reviewActionName = Review Data
    storeActionName = Store Experiments
    collectActionName = Take Data
    evaOnlyStorage = True
    storageRange = 2
    allowRepeatedSubjects = True
}

RESOURCE
{
    name = ElectricCharge
    amount = 200
    maxAmount = 200
    isTweakable = false
}

}

@PART[KIS_ContainerMount1]:NEEDS[KIS]
{
    @MODULE[ModuleKISPartMount]
    {
        @MOUNT
        {
            allowedPartName = WBI_Ponderosa
        }
    }
}

@PART[WBI_Ponderosa]:NEEDS[Impact]
{

MODULE
{
    name = Seismometer
}

}